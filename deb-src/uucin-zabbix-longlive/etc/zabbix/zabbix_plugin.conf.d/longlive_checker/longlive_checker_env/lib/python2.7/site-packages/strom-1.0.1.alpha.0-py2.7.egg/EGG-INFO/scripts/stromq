#encoding:utf-8
import sys
import datetime
import os
import ctypes
import strom
import logging
from strom.queue import StromQueueServer

logger = logging.getLogger()

def start():

    if len(sys.argv) == 3 or len(sys.argv) == 4:
        try:
            libc = ctypes.CDLL('libc.so.6')  
            libc.prctl(15,'stromq', 0, 0, 0)
    	    port=int(sys.argv[2])
            config =os.path.abspath('.')+os.sep+"strom.ini"
            default_config = os.path.dirname(strom.__file__)+os.sep+"strom.ini"
            if len(sys.argv) == 3:
                if not os.path.exists(config):
                    config =  default_config           
            else:
                config = os.path.abspath(sys.argv[3])
                if not os.path.exists(config):
                    print('not have strom.in in the path:%s' % config)
                    config = default_config 
            print('use config path:%s' % config)
            server=StromQueueServer(('0.0.0.0',port),config=config)
            print("%s server start port(%s)"% (datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"),sys.argv[2]))
            server.serve_forever()
        except ValueError as e:
            print("port must be integer")
        except BaseException as e:
            print("server stop case(%s)" % type(e))
            if type(e) != KeyboardInterrupt:
                logger.exception(e)
    else:
        print('you need tell me a port,like this(stromq start 7070 strom.ini)')

def stop():
    try:
        if sys.argv[2] != 'all':
            os.system("kill -9 $(lsof -i:%s|grep stromq|awk '{print $2}')" % sys.argv[2])
            print("%s stop all server port(%s)" % (datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"), sys.argv[2]))
        else:
            os.system("pkill -9 stromq")
            print("%s stop all server" % datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
    except:
        print("this command is only supported by an integer or all")
    
def version():
    print(strom.get_version())
if __name__=='__main__':
    if len(sys.argv)>1:
        if sys.argv[1]=='start':  
            start()
        elif sys.argv[1]=='stop':
            stop()
        elif sys.argv[1]=='version':
            version()
        else:
            print("only support commond:[start stop version]")
    else:
        print("Please input commond")
